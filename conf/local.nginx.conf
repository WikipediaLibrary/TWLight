# Everything at the top level here is happening at the scope of http in nginx.conf.
log_format matomo  '{"ip": "$remote_addr",'
                   '"host": "$host",'
                   '"path": "$request_uri",'
                   '"status": "$status",'
                   '"referrer": "$http_referer",'
                   '"user_agent": "$http_user_agent",'
                   '"length": $bytes_sent,'
                   '"generation_time_milli": $request_time,'
                   '"args": {"cvar": {"1": ["Has-Session", $has_session]}},'
                   '"date": "$time_iso8601"}';

# remote address is a joke here since we don't have x-forwarded-for
limit_req_zone $binary_remote_addr zone=one:10m rate=500r/s;

map $http_cookie $has_session {
  default 0;
  ~sessionid 1; # Django session cookie
}

upstream twlight {
  server twlight:80;
}

server {
  # if no Host match, close the connection to prevent host spoofing
  listen 80 default_server;
  return 444;
}

server {
    listen 80 deferred;
    client_max_body_size 4G;
    server_name localhost twlight.vagrant.localdomain;
    keepalive_timeout 5;
    # Send matomo JSON logs to syslog
    access_log syslog:server=syslog,severity=info matomo;
    # Send default logs to stdout
    access_log /dev/stdout;

    root /app;

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @twlight;
    }

    location @twlight {
      limit_req zone=one burst=1000 nodelay;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://twlight;
      # Add header to work with EDS
      add_header Referrer-Policy 'origin';
    }

    error_page 500 502 503 504 /500.html;

    location /500-dog.jpeg {
        root /app/500/;
    }

    location /500-Wikipedia_Library_owl.svg {
        root /app/500/;
    }

    location ~ .+/((500-Wikipedia_Library_owl\.svg)|(500-dog\.jpeg))$ {
        try_files $uri /$1;
    }

    location /500.html {
        internal;
        root /app/500/;
    }
}
