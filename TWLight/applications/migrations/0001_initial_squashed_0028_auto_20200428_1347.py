# Generated by Django 3.0.10 on 2020-11-02 10:27

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
from django.utils.timezone import utc
import django.utils.timezone


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# TWLight.applications.migrations.0008_auto_20160527_1502


def copy_editor_data(apps, schema_editor):
    Application = apps.get_model("applications", "Application")
    for app in Application.objects.all():
        if hasattr(app.user, "editor"):
            app.editor = app.user.editor
            app.save()
        else:
            app.delete()


class Migration(migrations.Migration):

    replaces = [
        ("applications", "0001_initial"),
        ("applications", "0002_application_date_created"),
        ("applications", "0003_application_date_closed"),
        ("applications", "0004_auto_20160427_2120"),
        ("applications", "0005_application_earliest_expiry_date"),
        ("applications", "0006_application_days_open"),
        ("applications", "0007_application_editor"),
        ("applications", "0008_auto_20160527_1502"),
        ("applications", "0009_auto_20160527_1505"),
        ("applications", "0010_auto_20160706_1409"),
        ("applications", "0011_auto_20160908_1410"),
        ("applications", "0012_auto_20160930_1434"),
        ("applications", "0013_application_sent_by"),
        ("applications", "0014_application_parent"),
        ("applications", "0015_auto_20170621_0822"),
        ("applications", "0016_auto_20170707_1552"),
        ("applications", "0017_auto_20170709_1859"),
        ("applications", "0018_remove_application_earliest_expiry_date"),
        ("applications", "0019_application_account_email"),
        ("applications", "0020_auto_20180607_1508"),
        ("applications", "0021_application_hidden"),
        ("applications", "0022_auto_20190104_1939"),
        ("applications", "0023_auto_20190329_1631"),
        ("applications", "0024_application_requested_access_duration"),
        ("applications", "0025_auto_20191030_0919"),
        ("applications", "0026_auto_20200305_2144"),
        ("applications", "0027_application_waitlist_status"),
        ("applications", "0028_auto_20200428_1347"),
    ]

    dependencies = [
        ("resources", "0002_auto_20160324_1826"),
        ("users", "0007_auto_20160511_1454"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "Pending"),
                            (1, "Under discussion"),
                            (2, "Approved"),
                            (3, "Not approved"),
                        ],
                        default=0,
                    ),
                ),
                ("rationale", models.TextField(blank=True)),
                ("specific_title", models.CharField(blank=True, max_length=128)),
                ("comments", models.TextField(blank=True)),
                ("agreement_with_terms_of_use", models.BooleanField(default=False)),
                (
                    "partner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to="resources.Partner",
                    ),
                ),
                (
                    "specific_stream",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to="resources.Stream",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "date_created",
                    models.DateField(
                        auto_now_add=True,
                        default=datetime.datetime(
                            2016, 4, 26, 15, 54, 22, 38710, tzinfo=utc
                        ),
                    ),
                ),
                (
                    "date_closed",
                    models.DateField(
                        blank=True,
                        help_text="Please do not override this field! It is set automatically.",
                        null=True,
                    ),
                ),
                (
                    "earliest_expiry_date",
                    models.DateField(
                        blank=True,
                        help_text="Please do not override this field! It is set automatically.",
                        null=True,
                    ),
                ),
                (
                    "days_open",
                    models.IntegerField(
                        blank=True,
                        help_text="Please do not override this field! It is set automatically.",
                        null=True,
                    ),
                ),
                (
                    "editor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to="users.Editor",
                    ),
                ),
            ],
        ),
        migrations.RunPython(
            copy_editor_data,
        ),
        migrations.RemoveField(
            model_name="application",
            name="user",
        ),
        migrations.AlterField(
            model_name="application",
            name="editor",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="applications",
                to="users.Editor",
            ),
            preserve_default=False,
        ),
        migrations.AlterModelOptions(
            name="application",
            options={
                "ordering": ["-date_created", "editor", "partner"],
                "verbose_name": "application",
                "verbose_name_plural": "applications",
            },
        ),
        migrations.AlterField(
            model_name="application",
            name="status",
            field=models.IntegerField(
                choices=[
                    (0, "Pending"),
                    (1, "Under discussion"),
                    (2, "Approved"),
                    (3, "Not approved"),
                    (4, "Sent to partner"),
                ],
                default=0,
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="sent_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who sent this application to the partner",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="applications.Application",
            ),
        ),
        migrations.AlterField(
            model_name="application",
            name="date_closed",
            field=models.DateField(
                blank=True,
                help_text="Please do not override this field! Its value is set automatically.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="application",
            name="days_open",
            field=models.IntegerField(
                blank=True,
                help_text="Please do not override this field! Its value is set automatically.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="application",
            name="date_created",
            field=models.DateField(
                blank=True, default=django.utils.timezone.now, editable=False
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="imported",
            field=models.NullBooleanField(default=False),
        ),
        migrations.AlterField(
            model_name="application",
            name="date_created",
            field=models.DateField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.RemoveField(
            model_name="application",
            name="earliest_expiry_date",
        ),
        migrations.AddField(
            model_name="application",
            name="account_email",
            field=models.CharField(blank=True, max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name="application",
            name="editor",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="applications",
                to="users.Editor",
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="hidden",
            field=models.BooleanField(default=False),
        ),
        migrations.AlterModelManagers(
            name="application",
            managers=[
                ("include_invalid", django.db.models.manager.Manager()),
            ],
        ),
        migrations.AlterField(
            model_name="application",
            name="status",
            field=models.IntegerField(
                choices=[
                    (0, "Pending"),
                    (1, "Under discussion"),
                    (2, "Approved"),
                    (3, "Not approved"),
                    (4, "Sent to partner"),
                    (5, "Invalid"),
                ],
                default=0,
            ),
        ),
        migrations.AlterField(
            model_name="application",
            name="account_email",
            field=models.EmailField(blank=True, max_length=254, null=True),
        ),
        migrations.AddField(
            model_name="application",
            name="requested_access_duration",
            field=models.IntegerField(
                blank=True,
                choices=[
                    (12, "12 months"),
                    (6, "6 months"),
                    (3, "3 months"),
                    (1, "1 month"),
                ],
                help_text="User selection of when they'd like their account to expire (in months). Required for proxied resources; optional otherwise.",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="application",
            name="specific_stream",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="applications",
                to="resources.Stream",
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="waitlist_status",
            field=models.BooleanField(
                default=False, help_text="Mark as True if the partner is WAITLISTED"
            ),
        ),
    ]
